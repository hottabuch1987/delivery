# Generated by Django 4.2.16 on 2024-12-30 20:32

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import phonenumber_field.modelfields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('services', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Avatar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('deleted', models.DateTimeField(blank=True, null=True)),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('image', models.ImageField(blank=True, help_text='Загружается в папку "profile/%Y-%m/" (год и месяц загрузки)', null=True, upload_to='profile/%Y-%m/', verbose_name='Изображение')),
            ],
            options={
                'verbose_name': 'Аватар',
                'verbose_name_plural': 'Аватары',
            },
            managers=[
                ('active', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('deleted', models.DateTimeField(blank=True, null=True)),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('registration_fee', models.DecimalField(decimal_places=2, default=500, help_text='Обязательная услуга для регистрационных действий.', max_digits=10, verbose_name='Регистрационный сбор')),
                ('initial_payment', models.DecimalField(decimal_places=2, default=2000, help_text='Минимальный платеж', max_digits=10, verbose_name='Минимальный платеж')),
                ('sms_info_service', models.BooleanField(default=True, help_text='SMS-информ. Получать информацию о состоянии подключения в SMS-сообщениях.', verbose_name='SMS-информ')),
                ('reglament', models.FileField(blank=True, help_text='Загружается в папку "reglament/%Y-%m/" (год и месяц загрузки)', null=True, upload_to='documents/reglament/%Y-%m/', verbose_name='Регламент')),
                ('agreement', models.FileField(blank=True, help_text='Загружается в папку "agreement/%Y-%m/" (год и месяц загрузки)', null=True, upload_to='documents/agreement/%Y-%m/', verbose_name='Договор')),
                ('accept_reglament', models.BooleanField(default=False, help_text='Отметьте, если принят регламент.', verbose_name='Принят регламент')),
                ('accept_agreement', models.BooleanField(default=False, help_text='Отметьте, если принят договор.', verbose_name='Принят договор')),
                ('fist_name', models.CharField(max_length=45, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=45, verbose_name='Фамилия')),
                ('street', models.CharField(max_length=45, verbose_name='Улица')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(default='+7 (000) 000-00-00', help_text='Введите номер телефона', max_length=128, region=None, unique=True, verbose_name='Телефон')),
                ('email', models.EmailField(default='example@example.com', help_text='Введите email', max_length=254, unique=True, verbose_name='Email')),
                ('comment', models.TextField(blank=True, help_text='Дополнительная информация', null=True, verbose_name='Дополнительная информация')),
                ('viewed', models.BooleanField(default=False, help_text='Отметьте, если просмотрен для подтверждения заказа', verbose_name='Просмотрен')),
                ('source', models.CharField(blank=True, help_text='От куда узнали?', max_length=255, null=True, verbose_name='От куда узнали?')),
                ('connection_type', models.ForeignKey(blank=True, help_text='Тип подключения', null=True, on_delete=django.db.models.deletion.SET_NULL, to='services.connectiontypeplace', verbose_name='Тип подключения')),
                ('equipment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='services.equipment', verbose_name='Оборудование')),
                ('promotions', models.ForeignKey(blank=True, help_text='Акции', null=True, on_delete=django.db.models.deletion.SET_NULL, to='services.promotion', verbose_name='Акции')),
                ('settlement', models.ForeignKey(blank=True, help_text='Населённый пункт', null=True, on_delete=django.db.models.deletion.SET_NULL, to='services.locality', verbose_name='Населённый пункт')),
                ('urgent_connection', models.ForeignKey(blank=True, help_text='Cрочное подключение', null=True, on_delete=django.db.models.deletion.SET_NULL, to='services.urgentconnection', verbose_name='Cрочное подключение')),
                ('user_profile', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='order_profile', to=settings.AUTH_USER_MODEL, verbose_name='Профиль пользователя')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
            },
        ),
    ]
